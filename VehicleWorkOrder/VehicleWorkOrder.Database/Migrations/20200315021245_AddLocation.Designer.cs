// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleWorkOrder.Database;

namespace VehicleWorkOrder.Database.Migrations
{
    [DbContext(typeof(WorkOrderContext))]
    [Migration("20200315021245_AddLocation")]
    partial class AddLocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Doors")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<short?>("ModelId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ScannedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Series")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransmissionStyle")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Trim")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VehicleIdentification")
                        .HasColumnType("varchar(17)")
                        .HasMaxLength(17);

                    b.Property<string>("VehicleType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Location", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Manufacture", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufactureName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Manufactures");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Model", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("ManufactureId")
                        .HasColumnType("smallint");

                    b.Property<string>("ModelName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ManufactureId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("Name")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Technician", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(75)")
                        .HasMaxLength(75);

                    b.HasKey("Id");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureAdded")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<short?>("LocationId")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PurchaseOrder")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RepairOrder")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<short?>("TechnicianId")
                        .HasColumnType("smallint");

                    b.Property<int>("UserAddedId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TechnicianId");

                    b.HasIndex("UserAddedId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Car", b =>
                {
                    b.HasOne("VehicleWorkOrder.Database.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Model", b =>
                {
                    b.HasOne("VehicleWorkOrder.Database.Models.Manufacture", "Manufacture")
                        .WithMany()
                        .HasForeignKey("ManufactureId");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.Photo", b =>
                {
                    b.HasOne("VehicleWorkOrder.Database.Models.Car", null)
                        .WithMany("Photos")
                        .HasForeignKey("CarId");

                    b.HasOne("VehicleWorkOrder.Database.Models.WorkOrder", null)
                        .WithMany("Photos")
                        .HasForeignKey("WorkOrderId");
                });

            modelBuilder.Entity("VehicleWorkOrder.Database.Models.WorkOrder", b =>
                {
                    b.HasOne("VehicleWorkOrder.Database.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleWorkOrder.Database.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("VehicleWorkOrder.Database.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.HasOne("VehicleWorkOrder.Database.Models.User", "UserAdded")
                        .WithMany()
                        .HasForeignKey("UserAddedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
